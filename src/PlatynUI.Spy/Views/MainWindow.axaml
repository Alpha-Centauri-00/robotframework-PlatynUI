<Window xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="using:PlatynUI.Spy.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
    x:Class="PlatynUI.Spy.Views.MainWindow"
    x:DataType="vm:MainWindowViewModel"
    Icon="/Assets/avalonia-logo.ico"
    Title="PlatynUI.Spy"
    Width="800"
    Height="600"
>

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at
        App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="E_xit" Command="{Binding $parent[Window].Close}" />
            </MenuItem>
        </Menu>

        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <Button Name="Refresh" Command="{Binding Refresh}" Content="Refresh" />
            <Button Name="AlwaysOnTop" Command="{Binding AlwaysOnTop}" Content="Always On Top" />
        </StackPanel>

        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5"
                    MinWidth="50" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" x:Name="XPath" />
            <Button x:Name="SearchXPath" Grid.Column="1"
                Width="50"
                Content="Search" />
        </Grid>

        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
            <TextBlock Text="Status:" />
            <TextBlock Text="Ready" />
        </StackPanel>

        <Grid ColumnDefinitions="0.40*,4,0.60*">
            <TreeView Grid.Column="0" ItemsSource="{Binding Root}"
                SelectedItem="{Binding SelectedNode, Mode=TwoWay}">
                <TreeView.DataTemplates>
                    <TreeDataTemplate DataType="vm:TreeNode"
                        ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <TextBlock Text="{Binding NodeName}" />
                            <TextBlock Foreground="Gray" Text="{Binding Description}" />
                            <!-- <TextBlock Foreground="Gray" Text="{Binding ElementName}" /> -->
                        </StackPanel>
                    </TreeDataTemplate>
                </TreeView.DataTemplates>
                <TreeView.Styles>
                    <Style Selector="TreeViewItem" x:DataType="vm:TreeNode">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </TreeView.Styles>
            </TreeView>

            <GridSplitter Grid.Column="1" />

            <DataGrid Grid.Column="2" ItemsSource="{Binding SelectedNode.Node.Attributes.Values}"
                CanUserResizeColumns="true">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" CanUserSort="true" />
                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

    </DockPanel>

</Window>